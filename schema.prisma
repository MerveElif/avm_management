// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model Mall {
  id              String    @id @default(cuid())
  name            String    @default("")
  city            String    @default("")
  address         String    @default("")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
  managers        User[]    @relation("Mall_managers")
  from_Store_mall Store[]   @relation("Store_mall")
}

model Store {
  id                 String    @id @default(cuid())
  storeName          String    @default("")
  floorNumber        Int?
  createdAt          DateTime? @default(now())
  updatedAt          DateTime? @updatedAt
  mall               Mall?     @relation("Store_mall", fields: [mallId], references: [id])
  mallId             String?   @map("mall")
  from_Client_stores Client[]  @relation("Client_stores")
  from_Payment_store Payment[] @relation("Payment_store")

  @@index([mallId])
}

model Client {
  id                  String    @id @default(cuid())
  fullName            String    @default("")
  phoneNumber         String    @default("")
  email               String    @unique @default("")
  createdAt           DateTime? @default(now())
  updatedAt           DateTime? @updatedAt
  stores              Store?    @relation("Client_stores", fields: [storesId], references: [id])
  storesId            String?   @map("stores")
  from_Payment_client Payment[] @relation("Payment_client")

  @@index([storesId])
}

model Payment {
  id          String   @id @default(cuid())
  amount      Decimal  @mysql.Decimal(10, 2)
  paymentDate DateTime @mysql.Date
  status      String?  @default("paid")
  store       Store?   @relation("Payment_store", fields: [storeId], references: [id])
  storeId     String?  @map("store")
  client      Client?  @relation("Payment_client", fields: [clientId], references: [id])
  clientId    String?  @map("client")

  @@index([storeId])
  @@index([clientId])
}

model User {
  id           String    @id @default(cuid())
  fullName     String    @default("")
  email        String    @unique @default("")
  password     String
  managedMalls Mall[]    @relation("Mall_managers")
  role         String?   @default("manager")
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
}
